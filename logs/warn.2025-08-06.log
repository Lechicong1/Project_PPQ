2025-08-06 15:35:39 WARN  [main] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08S01
2025-08-06 15:35:39 WARN  [main] o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1865)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1814)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:753)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1362)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1351)
	at com.example.PPQ.PpqApplication.main(PpqApplication.java:14)
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:175)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 35 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:150)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:166)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:121)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:945)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	... 48 common frames omitted
Caused by: java.net.UnknownHostException: No such host is known (mysqljava)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 51 common frames omitted
2025-08-06 15:35:39 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 15:35:39 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 15:35:40 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 15:35:40 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 15:35:40 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 15:35:40 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 15:35:42 WARN  [main] o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08S01
2025-08-06 15:35:42 WARN  [main] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
2025-08-06 15:37:30 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 15:37:30 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 15:37:31 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 15:37:31 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 15:37:31 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 15:37:31 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 15:37:33 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 15:37:35 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 20:16:37 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 20:16:37 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 20:16:38 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 20:16:38 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 20:16:38 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 20:16:38 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 20:16:40 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 20:16:42 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 20:16:42 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 21:29:50 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 21:29:50 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 21:29:51 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 21:29:51 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 21:29:51 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 21:29:51 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 21:29:54 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 21:29:56 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 21:29:56 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 21:49:36 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 21:49:36 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 21:49:37 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 21:49:37 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 21:49:37 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 21:49:37 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 21:49:39 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 21:49:41 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 21:49:41 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 22:31:31 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 22:31:31 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 22:31:33 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:31:33 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:31:33 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:31:33 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:31:39 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 22:31:43 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 22:31:43 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 22:37:00 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 22:37:00 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 22:37:01 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:37:01 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:37:01 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:37:01 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:37:06 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 22:37:10 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 22:37:10 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 22:41:58 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 22:41:58 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 22:41:59 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:41:59 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:41:59 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:41:59 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:42:04 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 22:42:06 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 22:42:06 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 22:45:04 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 22:45:04 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 22:45:06 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:45:06 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:45:06 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:45:06 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:45:11 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 22:45:15 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 22:45:15 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 22:53:10 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 22:53:10 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 22:53:10 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:53:10 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:53:10 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:53:10 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:53:13 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 22:53:15 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 22:53:15 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 22:59:44 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 22:59:44 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 22:59:45 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:59:45 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 22:59:45 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:59:45 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 22:59:48 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 22:59:50 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: D:/project_PPQ/upload/
2025-08-06 22:59:50 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 23:05:14 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 23:05:14 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 23:05:15 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 23:05:15 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 23:05:15 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 23:05:15 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 23:05:19 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 23:05:22 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 23:05:22 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 23:10:40 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 23:10:40 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 23:10:41 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 23:10:41 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 23:10:41 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 23:10:41 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 23:10:46 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 23:10:48 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 23:10:48 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
2025-08-06 23:12:48 WARN  [main] org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-06 23:12:48 WARN  [main] org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-08-06 23:12:49 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 23:12:49 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Course_TeacherEntity
2025-08-06 23:12:49 WARN  [main] org.hibernate.mapping.RootClass - HHH000038: Composite-id class does not override equals(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 23:12:49 WARN  [main] org.hibernate.mapping.RootClass - HHH000039: Composite-id class does not override hashCode(): com.example.PPQ.Entity.Student_ClassEntity
2025-08-06 23:12:53 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-06 23:12:56 WARN  [main] o.s.w.s.r.ResourceHandlerUtils - Appended trailing slash to static resource location: file:D:/project_PPQ/upload/
2025-08-06 23:12:57 WARN  [main] o.s.s.c.a.w.c.AuthorizeHttpRequestsConfigurer$AuthorizationManagerRequestMatcherRegistry - One of the patterns in [/login, /register, courses/{courseId}, /otp/**] is missing a leading slash. This is discouraged; please include the leading slash in all your request matcher patterns. In future versions of Spring Security, leaving out the leading slash will result in an exception.
